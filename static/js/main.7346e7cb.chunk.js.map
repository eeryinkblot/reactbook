{"version":3,"sources":["components/Excel.tsx","excelData.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Excel","props","sort","e","column","target","cellIndex","data","Array","from","state","descending","sortBy","sortedData","a","b","setState","initialData","headers","this","onClick","map","title","idx","row","index","cell","React","Component","output","App","className","excelData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAEqBA,E,kDAKjB,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAQVC,KAAO,SAACC,GACJ,IAAMC,EAASD,EAAEE,OAAOC,UAClBC,EAAOC,MAAMC,KAAK,EAAKC,MAAMH,MAE7BI,EAAa,EAAKD,MAAME,SAAWR,IAAW,EAAKM,MAAMC,WACzDE,EAAaN,EAAKL,MAAK,SAACY,EAAkBC,GAC5C,OAAOJ,EACDG,EAAEV,GAAUW,EAAEX,GAAU,GAAK,EAC7BU,EAAEV,GAAUW,EAAEX,GAAU,GAAK,KAEvC,EAAKY,SAAS,CACVT,KAAMM,EACND,OAAQR,EACRO,WAAYA,KApBhB,EAAKD,MAAQ,CACTH,KAAMN,EAAMgB,YACZL,OAAQ,KACRD,YAAY,GALI,E,qDA2BpB,IAAIO,EAAUC,KAAKlB,MAAMiB,QACrBX,EAAOY,KAAKT,MAAMH,KACtB,OACI,kCACI,uBAAOa,QAASD,KAAKjB,KAArB,SACA,6BACKgB,EAAQG,KAAI,SAACC,EAAeC,GAAhB,OACT,6BAAeD,GAANC,UAIjB,gCACChB,EAAKc,KAAI,SAACG,EAAoBC,GAArB,OACN,6BACKD,EAAIH,KAAI,SAACK,EAAcD,GAAf,OACL,6BAAiBC,GAARD,OAFRA,e,GA7CME,IAAMC,WCa1BC,EADA,CAdC,CACZ,OAAQ,QAAS,UAAW,oBAAkB,eAGrC,CACT,CAAC,qBAAsB,mBAAoB,WAAY,YAAa,iBACpE,CAAC,mBAAoB,8BAA4B,iBAAe,OAAQ,iBACxE,CAAC,wCAAyC,gBAAiB,WAAY,OAAQ,iBAC/E,CAAC,4BAA6B,kBAAmB,WAAY,OAAQ,iBACrE,CAAC,6BAA8B,sBAAc,aAAc,YAAa,iBACxE,CAAC,aAAc,mBAAoB,WAAY,OAAQ,iBACvD,CAAC,MAAO,mBAAoB,WAAY,OAAQ,mBCGrCC,MATf,WACE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,CAAOb,QAASc,EAAU,GACnBf,YAAae,EAAU,QCKvBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7346e7cb.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Excel extends React.Component<any, {\n    data: Array<Array<string>>,\n    sortBy: any,\n    descending: boolean\n}> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data: props.initialData,\n            sortBy: null,\n            descending: false,\n        };\n    }\n\n    sort = (e: any) => {\n        const column = e.target.cellIndex;\n        const data = Array.from(this.state.data);\n\n        const descending = this.state.sortBy === column && !this.state.descending;\n        const sortedData = data.sort((a: Array<string>, b: Array<string>) => {\n            return descending\n                ? a[column] < b[column] ? 1 : -1\n                : a[column] > b[column] ? 1 : -1;\n        });\n        this.setState({\n            data: sortedData,\n            sortBy: column,\n            descending: descending,\n        });\n    }\n\n    render() {\n        let headers = this.props.headers;\n        let data = this.state.data;\n        return (\n            <table>\n                <thead onClick={this.sort}>\n                <tr>\n                    {headers.map((title: string, idx: number) =>\n                        <th key={idx}>{title}</th>\n                    )}\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((row: Array<string>, index: number) =>\n                    <tr key={index}>\n                        {row.map((cell: string, index: number) =>\n                            <td key={index}>{cell}</td>\n                        )}\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        );\n    }\n}","const headers = [\n    \"Buch\", \"Autor\", \"Sprache\", \"veröffentlicht\", \"Verkäufe\"\n];\n\nconst data = [\n    [\"Der Herr der Ringe\", \"J. R. R. Tolkien\", \"Englisch\", \"1954-1955\", \"150 Millionen\"],\n    [\"Der kleine Prinz\", \"Antoine de Saint-Exupéry\", \"Französisch\", \"1943\", \"140 Millionen\"],\n    [\"Harry Potter und der Stein der Weisen\", \"J. K. Rowling\", \"Englisch\", \"1997\", \"107 Millionen\"],\n    [\"Und dann gabs keines mehr\", \"Agatha Christie\", \"Englisch\", \"1939\", \"100 Millionen\"],\n    [\"Der Traum der roten Kammer\", \"Cáo Xuèqín\", \"Chinesisch\", \"1754-1791\", \"100 Millionen\"],\n    [\"Der Hobbit\", \"J. R. R. Tolkien\", \"Englisch\", \"1937\", \"100 Millionen\"],\n    [\"Sie\", \"H. Rider Haggard\", \"Englisch\", \"1887\", \"100 Millionen\"]\n];\n\nconst output = [headers, data];\nexport default output;","import React from 'react';\nimport '../App.css';\nimport Excel from \"./Excel\";\nimport excelData from \"../excelData\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Excel headers={excelData[0]}\n               initialData={excelData[1]} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}