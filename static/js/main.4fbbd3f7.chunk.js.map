{"version":3,"sources":["components/Excel.tsx","excelData.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Excel","props","preSearchData","log","logPointer","toggleSearch","e_ignore","state","search","logSetState","data","e","needle","target","value","toLowerCase","index","dataset","filteredData","filter","row","indexOf","sort","column","cellIndex","Array","from","descending","sortBy","sortedData","a","b","showEditor","edit","parseInt","save","preventDefault","input","firstChild","download","format","event","contents","JSON","stringify","createCSV","URL","window","webkitURL","blob","Blob","type","href","createObjectURL","initialData","document","onkeydown","alt","altKey","shift","shiftKey","R","keyCode","Z","replay","redo","undo","this","reduce","result","rowResult","cell","content","replace","delimiter","length","renderToolbar","renderTable","className","onClick","bind","onChange","headers","map","_ignore","data-index","icon","headerElements","title","onDoubleClick","renderSearch","rowIndex","data-row","onSubmit","defaultValue","nextState","push","setState","interval","setInterval","clearInterval","console","React","Component","output","App","excelData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fbbd3f7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Excel extends React.Component<any, {\n    data: Array<Array<string>>,\n    sortBy: number | null,\n    descending: boolean,\n    edit: { row: number, column: number } | null,\n    search: boolean,\n}> {\n\n    private preSearchData: any;\n    private readonly log: any;\n    private logPointer: number;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data: props.initialData,\n            sortBy: null,\n            descending: false,\n            edit: null,\n            search: false,\n        };\n\n        this.preSearchData = null;\n        this.log = [this.state];\n        this.logPointer = 0;\n    }\n\n    componentDidMount() {\n        document.onkeydown = (event: any) => {\n            const alt = event.altKey;\n            const shift = event.shiftKey;\n\n            const R = event.keyCode === 82;\n            const Z = event.keyCode === 90;\n\n            if (alt && shift && R) {\n                this.replay();\n            } else if (alt && shift && Z) {\n                this.redo();\n            } else if (alt && Z) {\n                this.undo();\n            }\n        };\n    }\n\n    toggleSearch = (e_ignore: any) => {\n        if (this.state.search) {\n            this.logSetState({\n                search: false,\n                data: this.preSearchData,\n            });\n        } else {\n            this.preSearchData = this.state.data;\n            this.logSetState({\n                search: true,\n            });\n        }\n    }\n\n    search = (e: any) => {\n        const needle = e.target.value.toLowerCase();\n        if (!needle) {\n            this.logSetState({data: this.preSearchData});\n        }\n\n        const index = e.target.dataset.index;\n        let filteredData = this.preSearchData.filter((row: any) => {\n            return row[index].toLowerCase().indexOf(needle) > -1;\n        });\n        this.logSetState({data: filteredData});\n    }\n\n    sort = (e: any) => {\n        const column = e.target.cellIndex;\n        const data = Array.from(this.state.data);\n\n        const descending = this.state.sortBy === column && !this.state.descending;\n        const sortedData = data.sort((a: Array<string>, b: Array<string>) => {\n            return descending\n                ? a[column] < b[column] ? 1 : -1\n                : a[column] > b[column] ? 1 : -1;\n        });\n        this.logSetState({\n            data: sortedData,\n            sortBy: column,\n            descending: descending,\n        });\n    }\n\n    showEditor = (e: any) => {\n        this.logSetState({\n            edit: {\n                row: parseInt(e.target.dataset.row, 10),\n                column: e.target.cellIndex,\n            }\n        });\n    }\n\n    save = (e: any) => {\n        e.preventDefault();\n\n        const input = e.target.firstChild;\n        const data = Array.from(this.state.data);\n\n        if (this.state.edit) {\n            data[this.state.edit.row][this.state.edit.column] = input.value;\n        }\n\n        this.logSetState({\n            data: data,\n            edit: null,\n        });\n    }\n\n    download = (format: string, event: any) => {\n        const contents = format === 'json'\n            ? JSON.stringify(this.state.data)\n            : this.createCSV();\n\n        const URL = window.URL || window.webkitURL;\n        const blob = new Blob([contents], {type: 'text/' + format});\n        event.target.href = URL.createObjectURL(blob);\n        event.target.download = 'data.' + format;\n    }\n\n    private createCSV() {\n        return this.state.data.reduce((result: any, row: any) => {\n            return result + row.reduce((rowResult: any, cell: any, index: any) => {\n                    const content = cell.replace(/\"/g, '\"\"');\n                    const delimiter = index < row.length - 1 ? ';' : '';\n                    return `${rowResult}\"${content}\"${delimiter}`;\n                }, '')\n                + \"\\n\";\n        }, '');\n    }\n\n    render() {\n        return <div>\n            {this.renderToolbar()}\n            {this.renderTable()}\n        </div>;\n    }\n\n    private renderToolbar() {\n        return <div className=\"toolbar\">\n            <button onClick={this.toggleSearch}>{this.state.search ? 'Suche beenden' : 'Suchen'}</button>\n            <a onClick={this.download.bind(this, 'json')} href=\"data.json\">Export als JSON</a>\n            <a onClick={this.download.bind(this, 'csv')} href=\"data.csv\">Export als CSV</a>\n        </div>;\n    }\n\n    private renderSearch() {\n        return (<tr onChange={this.search}>\n            {this.props.headers.map((_ignore: any, index: number) =>\n                <td key={index}>\n                    <input type=\"text\" data-index={index}/>\n                </td>)}\n        </tr>);\n    }\n\n    private renderTable() {\n        const headers = this.props.headers;\n        const data = this.state.data;\n        const edit = this.state.edit;\n\n        let icon: any = null;\n        if (this.state.descending) {\n            icon = ' \\u2193';\n        } else {\n            icon = ' \\u2191';\n        }\n\n        const headerElements =\n            headers.map((title: string, index: number) =>\n                <th key={index}>{title}{this.state.sortBy === index && icon}</th>\n            );\n\n        return (\n            <table>\n                <thead onClick={this.sort}>\n                <tr>\n                    {headerElements}\n                </tr>\n                </thead>\n                <tbody onDoubleClick={this.showEditor}>\n                {this.state.search && this.renderSearch()}\n                {data.map((row: Array<string>, rowIndex: number) =>\n                    <tr key={rowIndex}>\n                        {row.map((content: string, index: number) =>\n                            <td key={index} data-row={rowIndex}>\n                                {edit && edit.row === rowIndex && edit.column === index &&\n                                <form onSubmit={this.save}>\n                                    <input type=\"text\" defaultValue={content}/>\n                                </form>\n                                }\n                                {edit && (edit.row !== rowIndex || edit.column !== index) && content}\n                                {!edit && content}\n                            </td>\n                        )}\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        );\n    }\n\n    private logSetState(nextState: any) {\n        this.log.push(nextState);\n        this.logPointer += 1;\n        this.setState(nextState);\n    }\n\n    private replay() {\n        if (this.log.length === 1) {\n            console.log('Noch kein Status zur Wiedergabe');\n            return;\n        }\n\n        let index = -1;\n        let interval = setInterval(() => {\n            index++;\n\n            this.setState(this.log[index]);\n\n            if (index === this.log.length - 1) {\n                clearInterval(interval);\n            }\n        }, 1000);\n    }\n\n    private undo() {\n        if (this.logPointer > 0) {\n            this.logPointer -= 1;\n            this.setState(this.log[this.logPointer]);\n        }\n    }\n\n    private redo() {\n        if (this.logPointer < (this.log.length - 1)) {\n            this.logPointer += 1;\n            this.setState(this.log[this.logPointer]);\n        }\n    }\n\n}","const headers = [\n    \"Buch\", \"Autor\", \"Sprache\", \"veröffentlicht\", \"Verkäufe\"\n];\n\nconst data = [\n    [\"Der Herr der Ringe\", \"J. R. R. Tolkien\", \"Englisch\", \"1954-1955\", \"150 Millionen\"],\n    [\"Der kleine Prinz\", \"Antoine de Saint-Exupéry\", \"Französisch\", \"1943\", \"140 Millionen\"],\n    [\"Harry Potter und der Stein der Weisen\", \"J. K. Rowling\", \"Englisch\", \"1997\", \"107 Millionen\"],\n    [\"Und dann gabs keines mehr\", \"Agatha Christie\", \"Englisch\", \"1939\", \"100 Millionen\"],\n    [\"Der Traum der roten Kammer\", \"Cáo Xuèqín\", \"Chinesisch\", \"1754-1791\", \"100 Millionen\"],\n    [\"Der Hobbit\", \"J. R. R. Tolkien\", \"Englisch\", \"1937\", \"100 Millionen\"],\n    [\"Sie\", \"H. Rider Haggard\", \"Englisch\", \"1887\", \"100 Millionen\"]\n];\n\nconst output = [headers, data];\nexport default output;","import React from 'react';\nimport '../App.css';\nimport Excel from \"./Excel\";\nimport excelData from \"../excelData\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Excel headers={excelData[0]}\n               initialData={excelData[1]} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}